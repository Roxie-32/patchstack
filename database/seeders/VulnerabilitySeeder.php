<?php

namespace Database\Seeders;

use App\Models\Vulnerability;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Str;

class VulnerabilitySeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {

        $vulnerabilites = [
            [
                'uuid' => Str::uuid(),
                'title' => 'Security Logging and Monitoring Failures',
                'description' => "This category is to help detect, escalate, and respond to active breaches. 
                                  Without logging and monitoring, breaches cannot be detected. 
                                  Insufficient logging, detection, monitoring, and active response occurs any time"
            ],
            [
                'uuid' => Str::uuid(),
                'title' => 'Broken Access Control',
                'description' => "Access control enforces policy such that users cannot act outside of their intended permissions. 
                                  Failures typically lead to unauthorized information disclosure, 
                                  modification, or destruction of all data or performing a business function outside the user's limits."
            ],
            [
                'uuid' => Str::uuid(),
                'title' => 'Entertainment',
                'description' => "The first thing is to determine the protection needs of data in transit and at rest. 
                                    For example, passwords, credit card numbers, health records, personal information,
                                    and business secrets require extra protection, mainly if that data falls under privacy laws,"
            ],
            [
                'uuid' => Str::uuid(),
                'title' => 'Injection',
                'description' => "Some of the more common injections are SQL, NoSQL, OS command, Object Relational Mapping (ORM),
                                     LDAP, and Expression Language (EL) or Object Graph Navigation Library 
                                    (OGNL) injection. The concept is identical among all interpreters"
            ],
            [
                'uuid' => Str::uuid(),
                'title' => 'Identification and Authentication Failures',
                'description' => "Confirmation of the user's identity, authentication, and session management 
                                    is critical to protect against authentication-related attacks. "
            ]
        ];

        collect($vulnerabilites)->each(function ($vulnerability) {
            Vulnerability::create($vulnerability);
        });
    }
}
